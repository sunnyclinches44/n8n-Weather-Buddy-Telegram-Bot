{
  "name": "Personal Weather Assistant",
  "nodes": [
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"city\": \"Sydney\",\n  \"country\": \"Australia\",\n  \"channel\": \"Manual\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        208,
        0
      ],
      "id": "3d42f0cf-7f5d-4699-bf76-984718236ada",
      "name": "Manual Test Data"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "10e90329-5cfa-4acf-adf4-8e402b27c5eb",
      "name": "Manual Trigger"
    },
    {
      "parameters": {
        "cityName": "={{ $input.first().json.city }}"
      },
      "type": "n8n-nodes-base.openWeatherMap",
      "typeVersion": 1,
      "position": [
        416,
        0
      ],
      "id": "dab8d73b-3212-4833-97d6-a94213220012",
      "name": "Get Weather",
      "credentials": {
        "openWeatherMapApi": {
          "id": "gZoNUG6xO21k8EMI",
          "name": "OpenWeatherMap account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a friendly personal weather assistant named *Weather Buddy*.\n\nYour job is to receive weather condition input and respond with warm, caring advice tailored to the weather. Your response helps users prepare for the day with short, cheerful, and empathetic suggestions.\n\nYou have access to this tool:\n\n1. `sendTelegramMessage(text: string)`  \n   – Sends a short message to the user on Telegram.\n\nInstructions:  \n- Always call `sendTelegramMessage` with a personalized message based on the weather input.  \n- Your message should be concise (2–3 sentences), empathetic, and begin with **\"Hey Friend,\"**.  \n- If the weather is:\n  - **Rainy** → Remind the user to carry an umbrella and wear a jacket.  \n  - **Sunny** → Recommend wearing cotton clothes to stay cool.  \n- Extrapolate this tone and structure to future weather conditions.  \n- Only ask for clarification if the weather input is missing or unclear.  \n- Do **not** return raw text responses. Always wrap your message in the tool format below:\n\nExample:\n\n```json\n{\n  \"tool_call\": \"sendTelegramMessage\",\n  \"arguments\": {\n    \"text\": \"Hey Friend, it’s sunny today ☀️. Don’t forget your cotton clothes and sunglasses!\"\n  }\n}\n\nWeather condition input: \"\"\" {{ $json.weather[0].main}}\"\"\"",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        624,
        0
      ],
      "id": "836b8018-af59-4484-89f1-2445d640cfab",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        496,
        208
      ],
      "id": "01c8cc09-cb81-468f-8e9a-4f079d4bdd03",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "n1F1BFof3K2YEo07",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "test-user-session"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        640,
        208
      ],
      "id": "21308cfc-c5b6-4eba-b94d-0ed479a8295c",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "chatId": "={{$env.TELEGRAM_CHAT_ID}}",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Text', ``, 'string') }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegramTool",
      "typeVersion": 1.2,
      "position": [
        864,
        288
      ],
      "id": "f4cd0003-a793-4378-abc5-c20d0a523f32",
      "name": "sendTelegramMessage",
      "webhookId": "4e59f7c9-f551-4d08-ac62-2a903604a8f6",
      "credentials": {
        "telegramApi": {
          "id": "70FeqZq7wQAEXOoM",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": "={{ $env.SCHEDULE_HOUR }}",
              "triggerAtMinute": "={{ $env.SCHEDULE_MINUTE }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -32,
        288
      ],
      "id": "b06e4efb-be09-400f-a04a-41396e0f2bd8",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "content": "# *Weather Buddy Telegram Bot Agent*\n\n## Use Case\nCheck today’s weather for a configured location and send a short, friendly reminder to Telegram.\n\nExamples:\n- **Rainy:** “Hey Friend, don’t forget your umbrella and jacket.”\n- **Sunny:** “Hey Friend, wear cotton clothes to stay cool.”\n\nWorkflow can run:\n- **Manually** (Manual Trigger)\n- **Automatically** on a schedule (Schedule Trigger)\n\n---\n\n## Configuration\n\n### 1. Prerequisites\n- **Telegram Bot** (create via @BotFather, get `TELEGRAM_BOT_TOKEN` & `TELEGRAM_CHAT_ID`)\n- **OpenAI API Key**\n- **OpenWeatherMap API Key**\n\n### 2. Environment Variables\n| Key | Example |\n|---|---|\n| `OPENAI_API_KEY` | `sk-...` |\n| `OPENWEATHER_API_KEY` | `abc123...` |\n| `WEATHER_LOCATION` | `Sydney,AU` |\n| `TELEGRAM_BOT_TOKEN` | `123456:ABC...` |\n| `TELEGRAM_CHAT_ID` | `-1001234567890` |\n| `RUN_MODE` | `manual` or `schedule` |\n| `SCHEDULE_CRON` | `0 8 * * *` |\n\n### 3. Node Flow\n1. **Trigger** — Manual or Scheduled.\n2. **Get Weather** — Calls OpenWeatherMap API using `WEATHER_LOCATION`.\n3. **AI Agent** — Generates friendly advice based on weather.\n4. **sendTelegramMessage Tool** — Posts message to Telegram.\n\n### 4. Agent Prompt\n```\nYou are a friendly personal weather assistant named *Weather Buddy*.\n\nYour job is to receive weather condition input and respond with warm, caring advice tailored to the weather. \nYour response helps users prepare for the day with short, cheerful, and empathetic suggestions.\n\nYou have access to this tool:\n\n1. `sendTelegramMessage(text: string)`  \n   – Sends a short message to the user on Telegram.\n\nInstructions:  \n- Always call `sendTelegramMessage` with a personalized message based on the weather input.  \n- Your message should be concise (2–3 sentences), empathetic, and begin with **\"Hey Friend,\"**.  \n- If the weather is:\n  - **Rainy** → Remind the user to carry an umbrella and wear a jacket.  \n  - **Sunny** → Recommend wearing cotton clothes to stay cool.  \n- Extrapolate this tone and structure to future weather conditions.  \n- Only ask for clarification if the weather input is missing or unclear.  \n- Do **not** return raw text responses. Always wrap your message in the tool format below:\n\nExample:\n\n```json\n{\n  \"tool_call\": \"sendTelegramMessage\",\n  \"arguments\": {\n    \"text\": \"Hey Friend, it’s sunny today ☀️. Don’t forget your cotton clothes and sunglasses!\"\n  }\n}\n\nWeather condition input: \"\"\" {{ $json.weather[0].main}}\"\"\"\n```\n\n---\n\n**Ready to run:** Set your environment variables, connect nodes as above, and trigger manually or by schedule.\n",
        "height": 1616,
        "width": 1040
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1216,
        -304
      ],
      "id": "65817634-3f6a-4ca7-aa2d-05a9abe63eb3",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "connections": {
    "Manual Test Data": {
      "main": [
        [
          {
            "node": "Get Weather",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Manual Test Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Weather": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "sendTelegramMessage": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Manual Test Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "0ccaaaf1-9168-435d-a503-03f369bc4e9d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5863f65f15dc971485e7a4e5c89ab3fc7244e1d6e770e4ac529f7dc513e08851"
  },
  "id": "WV02y7kGi6uW09y3",
  "tags": []
}